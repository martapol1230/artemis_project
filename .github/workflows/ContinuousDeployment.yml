env:
  region:             "us-central1"
  app_name:           "artemis"
  app_version:        ${GITHUB_SHA}
  app_port:           "5000"
  project_id:         "${{ secrets.PROJECT_ID }}"
  repository:         "us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/artemis/artemis"
  cluster_name:       "project-cluster"
  helm_repository:    "https://github.com/farrukh90/custom_helm_chart.git"
  google_domain_name: "${{ secrets.GOOGLE_DOMAIN_NAME }}"
  environment:        "qa"
  github_username:    "farrukh90"
  slack_enabled:      "false"


name: ContinuousDeployment

on:
  workflow_run:
    workflows: ["ContinuousDelivery"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure kubectl
        run: |
          sudo apt-get update
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update && sudo apt-get install google-cloud-cli
          sudo apt-get install kubectl
          gcloud container clusters get-credentials "${{ env.cluster_name }}" --region  "${{ env.region }}"
          kubectl get nodes

      - name: Check Out Helm Repo
        run: |
          git clone "${{ env.helm_repository }}"

      - name: Configure Backend
        working-directory: "custom_helm_chart"
        run: |
          bash setenv.sh

      - name: Initialize Terraform
        working-directory: "custom_helm_chart"
        run: |
          terraform init

      - name: Create Terraform Workspace
        working-directory: "custom_helm_chart"
        run: |
          terraform workspace select ${{ env.environment }} || terraform workspace new ${{ env.environment }}

      - name: Deploy Application
        working-directory: "custom_helm_chart"
        run: |
          terraform apply \
            -var repository="${{ env.repository }}" \
            -var app_version="${{ env.app_version }}" \
            -var app_port="${{ env.app_port }}" \
            -var google_domain_name="${{ env.google_domain_name }}" \
            -var app_name="${{ env.app_name }}" \
            -var region="${{ env.region }}" \
            -var project_id="${{ secrets.PROJECT_ID }}" \
            -var environment="${{ env.environment }}" \
            --auto-approve
